FROM public.ecr.aws/lambda/python@sha256:bbc480b7978f410a145932cbe94d5699ac7e1b9897a35876dde2a76e827760cb AS build

ENV TOURIST_VERSION=0.1.0a1

RUN dnf install -y unzip && \
    curl -Lo "/tmp/chromedriver-linux64.zip" "https://storage.googleapis.com/chrome-for-testing-public/126.0.6478.126/linux64/chromedriver-linux64.zip" && \
    curl -Lo "/tmp/chrome-linux64.zip" "https://storage.googleapis.com/chrome-for-testing-public/126.0.6478.126/linux64/chrome-linux64.zip" && \
    unzip /tmp/chromedriver-linux64.zip -d /opt/ && \
    unzip /tmp/chrome-linux64.zip -d /opt/

FROM public.ecr.aws/lambda/python@sha256:bbc480b7978f410a145932cbe94d5699ac7e1b9897a35876dde2a76e827760cb
RUN dnf install -y atk cups-libs gtk3 libXcomposite alsa-lib \
    libXcursor libXdamage libXext libXi libXrandr libXScrnSaver \
    libXtst pango at-spi2-atk libXt xorg-x11-server-Xvfb \
    xorg-x11-xauth dbus-glib dbus-glib-devel nss mesa-libgbm

RUN pip install --no-cache-dir tourist[app]==${TOURIST_VERSION}

COPY --from=public.ecr.aws/awsguru/aws-lambda-adapter:0.8.3 /lambda-adapter /opt/extensions/lambda-adapter
COPY --from=build /opt/chrome-linux64 ./browser
COPY --from=build /opt/chromedriver-linux64 ./browser

ENV AWS_LWA_READINESS_CHECK_PATH=/
ENV AWS_LWA_REMOVE_BASE_PATH=/main
ENV AWS_LWA_ENABLE_COMPRESSION=true
ENV AWS_LWA_PORT=8000

ENTRYPOINT [ "tourist" ]